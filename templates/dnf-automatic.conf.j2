# {{ ansible_managed }}
[commands]
upgrade_type = {{ yumcron_update_cmd }}
random_sleep = {{ yumcron_random_sleep.daily | default(yumcron_random_sleep) }}
download_updates = {{ yumcron_download_updates.daily | default(yumcron_download_updates) }}
apply_updates = {{ yumcron_apply_updates.daily | default(yumcron_apply_updates) }}

# To just receive updates use dnf-automatic-notifyonly.timer


# Whether updates should be applied when they are available, by
# dnf-automatic.timer. notifyonly.timer, download.timer and
# install.timer override this setting.


[emitters]
system_name = {{ yumcron_system_name.daily | default(yumcron_system_name) }}
emit_via = {{ yumcron_emit_via.daily | default(yumcron_emit_via) }}


[email]
email_from = {{ yumcron_email_from }}
email_to = {% for item in yumcron_email_to %}{{ item }}{% if not loop.last %}, {% endif %}{% endfor %}

email_host = {{ yumcron_email_host }}


{# [command]
# The shell command to execute. This is a Python format string, as used in
# str.format(). The format function will pass a shell-quoted argument called
# `body`.
# command_format = "cat"

# The contents of stdin to pass to the command. It is a format string with the
# same arguments as `command_format`.
# stdin_format = "{body}"


[command_email]
# The shell command to use to send email. This is a Python format string,
# as used in str.format(). The format function will pass shell-quoted arguments
# called body, subject, email_from, email_to.
# command_format = "mail -s {subject} -r {email_from} {email_to}"

# The contents of stdin to pass to the command. It is a format string with the
# same arguments as `command_format`.
# stdin_format = "{body}" #}
email_from = {{ yumcron_email_from }}
email_to = {% for item in yumcron_email_to %}{{ item }}{% if not loop.last %}, {% endif %}{% endfor %}


[base]
# This section overrides dnf.conf

# Use this to filter DNF core messages
debuglevel = {{ yumcron_debuglevel }}
